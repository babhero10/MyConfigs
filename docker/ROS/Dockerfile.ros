FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive
ENV EDITOR=nvim

# Install essential packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    gnupg2 \
    lsb-release \
    curl \
    python3-pip \
    zsh \
    vim \
    xvfb \
    x11-utils \
    iputils-ping \
    build-essential \
    cmake \
    fuse \
    git \
    libyaml-cpp-dev \
    python3-argcomplete \
    python3-pytest \
    software-properties-common \
    locales \
    && rm -rf /var/lib/apt/lists/*

# Install Neovim
RUN wget https://github.com/neovim/neovim/releases/download/stable/nvim.appimage -O /usr/local/bin/nvim && \
    chmod +x /usr/local/bin/nvim

# Install Oh-My-Zsh and plugins
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended && \
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/themes/powerlevel10k && \
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting && \
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions && \
    git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-completions

# Add ROS Noetic repository and install ROS Noetic
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
    curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \
    apt-get update && apt-get install -y ros-noetic-ros-base ros-noetic-rosserial ros-noetic-turtlesim && \
    rm -rf /var/lib/apt/lists/*

# Install ROS Foxy dependencies and repositories
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && apt-get upgrade && apt-get install -y ros-foxy-desktop ros-dev-tools ros-foxy-ros1-bridge ros-foxy-turtlesim \
    python3-colcon-common-extensions \
    python3-rosdep && \
    rm -rf /var/lib/apt/lists/*

# Set working directory for ROS workspace
WORKDIR /ros_ws/

# Add anything here if you forget something (better to add it up of course but to save build time).
RUN apt-get update && apt-get upgrade && apt-get -y install python3-venv zip tar && \
rm -rf /var/lib/apt/lists/*
