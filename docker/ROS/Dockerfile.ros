FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    gnupg2 \
    lsb-release \
    curl \
    python3-pip \
    xvfb \
    x11-utils \
    iputils-ping \
    && rm -rf /var/lib/apt/lists/*

# ROS noetic installation.
RUN sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list' && \
curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && mkdir -p /root/.ros/log


RUN apt-get update && apt-get install -y ros-noetic-desktop-full && rm -rf /var/lib/apt/lists/*

# Source the ROS setup.bash file
RUN echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc 

RUN apt update && apt upgrade && apt install ros-noetic-turtlesim

# Install ROS foxy
RUN apt update && apt install -y --no-install-recommends locales && \
locale-gen en_US en_US.UTF-8 && \
update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \
export LANG=en_US.UTF-8 && \
apt install -y --no-install-recommends software-properties-common && rm -rf /var/lib/apt/lists/* && \
add-apt-repository universe

RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt update && apt -y upgrade && apt install -y --no-install-recommends ros-foxy-desktop python3-argcomplete ros-dev-tools \
    build-essential \
    cmake \
    git \
    libyaml-cpp-dev \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-pytest \
    ros-foxy-ros1-bridge \
    && rm -rf /var/lib/apt/lists/*

RUN echo "source /opt/ros/foxy/setup.bash" >> ~/.bashrc 

WORKDIR /ros_ws/

CMD ["bash"]

# # Use the script as the entrypoint:
# ENTRYPOINT ["/entrypoint.sh"]

# Install necessary dependencies
